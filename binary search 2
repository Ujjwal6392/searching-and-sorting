//*************finding square root of a number using binary search*************
#include <iostream>
#include<vector>
using namespace std;

int findsqrt(int n)
{
    int ans=0;
    int target=n;
    int s=0;
    int e=n;
    int mid=(s+((e-s)/2));
    while(s<=e)
    {
        if(mid*mid==target)
        {
            return mid;
        }
        else if (mid*mid<target)
        {
             ans=mid;
            s=mid+1;
        }
        else if(mid*mid>target)
        {
           
            e=mid-1;
        }
        mid=(s+((e-s)/2));
    }
    return ans;
}
int main() 
{
    int n;
    cout<<"enter the number ";
    cin>>n;
    int ans=findsqrt(n);
    cout<<"square root of the number "<<n<<" is "<<ans<<endl;
    double finalans=ans;
    int precision;
    cout<<"enter the digits of decimal you want in answer ";
    cin>>precision;
    double step=0.1;
    for(int i=0;i<precision;i++)
    {
        for(double j=finalans;j*j<=n;j+=step)
        {
            finalans=j;
        }
        step=step/10;
    }
    cout<<"Final answer is "<<finalans<<endl;

     return 0;
}

//************2-d array binary search***************************
#include <iostream>
using namespace std;

bool binarysearch(int arr[][4],int rows,int cols,int target)
{
    int s=0;
    int e=(rows*cols)-1;
    int mid=(s+((e-s)/2));
    while(s<=e)
    {
        int rowIndex=mid/cols;
        int colIndex=mid%cols;
        int element=arr[rowIndex][colIndex];
        
        if(element==target)
        {
            cout<<"found at index "<<rowIndex<<" "<<colIndex<<endl;
            return true;
        }
        else if(element>target)
        {
            e=mid-1;
        }
        else
        {
            s=mid+1;
        }
        mid=(s+((e-s)/2));
    }
    return false;
}

int main() 
{
    int arr[5][4]={{1,2,3,4},{5,6,7,8},{9,10,11,12},{13,14,15,16},{17,18,19,20}};
    int rows=5;
    int cols=4;
    int target=19;
    bool ans=binarysearch(arr,rows,cols,target);
    if(ans)
    {
        cout<<"Target found "<<endl;
    }
    else
    {
        cout<<"target not found "<<endl;
    }
    return 0;
}
